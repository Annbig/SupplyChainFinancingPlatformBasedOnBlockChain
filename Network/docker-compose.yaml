version: '2'

networks:
  case:

services:

  orderer0.orderer.com:
    container_name: orderer0.orderer.com
    image: hyperledger/fabric-orderer:${IMAGE_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/genesis.block
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./channel/genesis.block:/var/hyperledger/orderer/genesis.block
      - ./crypto-config/ordererOrganizations/orderer.com/orderers/orderer0.orderer.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/orderer.com/orderers/orderer0.orderer.com/tls/:/var/hyperledger/orderer/tls
    ports:
      - 7050:7050
    networks:
      - case

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:${IMAGE_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - case

  peer0.supplier.com:
    container_name: peer0.supplier.com
    image: hyperledger/fabric-peer:${IMAGE_TAG}
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      #这个网络名应该是文件夹名加上yaml文件定义的network,都小写
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_case
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.supplier.com
      - CORE_PEER_ADDRESS=peer0.supplier.com:7051
      - CORE_PEER_LOCALMSPID=supplierMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/supplier.com/peers/peer0.supplier.com/msp/:/etc/hyperledger/fabric/msp/
        - ./crypto-config/peerOrganizations/supplier.com/peers/peer0.supplier.com/tls/:/etc/hyperledger/fabric/tls/
    ports:
      - 7051:7051
      - 7053:7053
    networks:
      - case

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:${IMAGE_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984
    networks:
      - case

  peer0.core.com:
    container_name: peer0.core.com
    image: hyperledger/fabric-peer:${IMAGE_TAG}
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      #这个网络名应该是文件夹名加上yaml文件定义的network,都小写
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_case
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.core.com
      - CORE_PEER_ADDRESS=peer0.core.com:7051
      - CORE_PEER_LOCALMSPID=coreMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/core.com/peers/peer0.core.com/msp/:/etc/hyperledger/fabric/msp/
        - ./crypto-config/peerOrganizations/core.com/peers/peer0.core.com/tls/:/etc/hyperledger/fabric/tls/
    ports:
      - 8051:7051
      - 8053:7053
    networks:
      - case

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:${IMAGE_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 7984:5984
    networks:
      - case

  peer0.bank.com:
    container_name: peer0.bank.com
    image: hyperledger/fabric-peer:${IMAGE_TAG}
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      #这个网络名应该是文件夹名加上yaml文件定义的network,都小写
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_case
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.bank.com
      - CORE_PEER_ADDRESS=peer0.bank.com:7051
      - CORE_PEER_LOCALMSPID=bankMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/bank.com/peers/peer0.bank.com/msp/:/etc/hyperledger/fabric/msp/
        - ./crypto-config/peerOrganizations/bank.com/peers/peer0.bank.com/tls/:/etc/hyperledger/fabric/tls/
    ports:
      - 9051:7051
      - 9053:7053
    networks:
      - case